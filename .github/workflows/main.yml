# This is a basic workflow to help you get started with Actions

name: Build and Check via Snyk

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Building and testing the project
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@master

    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@master
      with:
        go-version: '1.19.5' # The Go version to download (if necessary) and use.

    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint

    # Run build of the application
    - name: Run build
      run: go build ./cmd/app

    # Run vet on the code
    - name: Run vet 
      run: go vet ./cmd/app 

    # Run testing on the code
    - name: Run testing
      run: go test ./... -v
    
  opensource-security:
    name: Checking Dependency Security with Snyk
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@master
      - name: Set up Node 14
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: install Snyk CLI
        run: npm install -g snyk
      - name: Run Snyk to check for vulnerable dependencies
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test
      - name: Set up Snyk Monitoring
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk monitor  
          
  code-security:
    name: Checking Code Security with Snyk
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for code vulnerabilities
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
